Bridge.assembly("Bridge.Navigation",function($asm,globals){"use strict";Bridge.define("Bridge.Navigation.INavigator",{$kind:"interface"});Bridge.define("Bridge.Navigation.INavigatorConfigurator",{$kind:"interface"});Bridge.define("Bridge.Navigation.IBrowserHistoryManager",{$kind:"interface"});Bridge.define("Bridge.Navigation.IAmLoadable",{$kind:"interface"});Bridge.define("Bridge.Navigation.IPageDescriptor",{$kind:"interface"});Bridge.define("Bridge.Navigation.Model.UrlDescriptor",{props:{PageId:null,Parameters:null}});Bridge.define("Bridge.Navigation.NavigationUtility",{statics:{fields:{VirtualDirectory:null},methods:{GetParameter:function(T,parameters,paramKey){if(parameters==null)throw new System.Exception("Parameters is null!");if(!parameters.containsKey(paramKey))throw new System.Exception(System.String.format("No parameter with key {0} found!",[paramKey]));var value=parameters.get(paramKey),parseMethod=Bridge.Reflection.getMembers(T,8,284,"Parse",System.Array.init([System.String],Function));return parseMethod!=null?Bridge.cast(Bridge.unbox(Bridge.Reflection.midel(parseMethod,null).apply(null,Bridge.unbox(System.Array.init([value],System.Object))),T),T):Bridge.cast(Bridge.unbox(value,T),T)},BuildBaseUrl:function(pageId){var baseUrl=System.String.format("{0}//{1}",window.location.protocol,window.location.host);return System.String.isNullOrEmpty(Bridge.Navigation.NavigationUtility.VirtualDirectory)?System.String.format("{0}#{1}",baseUrl,pageId):System.String.format("{0}/{1}#{2}",baseUrl,Bridge.Navigation.NavigationUtility.VirtualDirectory,pageId)}}}});Bridge.define("Bridge.Navigation.Utility",{statics:{methods:{SequentialScriptLoad:function(scripts){if(System.Linq.Enumerable.from(scripts).any()){var toLoad=System.Linq.Enumerable.from(scripts).first();$.getScript(toLoad,function(o,s,arg3){scripts.remove(toLoad);Bridge.Navigation.Utility.SequentialScriptLoad(scripts)})}}}}});Bridge.define("Bridge.Navigation.BridgeNavigator",{inherits:[Bridge.Navigation.INavigator],statics:{fields:{_actualController:null}},fields:{Configuration:null},events:{OnNavigated:null},props:{LastNavigateController:{get:function(){return Bridge.Navigation.BridgeNavigator._actualController}}},alias:["EnableSpafAnchors","Bridge$Navigation$INavigator$EnableSpafAnchors","Navigate","Bridge$Navigation$INavigator$Navigate","addOnNavigated","Bridge$Navigation$INavigator$addOnNavigated","removeOnNavigated","Bridge$Navigation$INavigator$removeOnNavigated","LastNavigateController","Bridge$Navigation$INavigator$LastNavigateController","InitNavigation","Bridge$Navigation$INavigator$InitNavigation"],ctors:{ctor:function(configuration){this.$initialize();this.Configuration=configuration}},methods:{EnableSpafAnchors:function(){var allAnchors=$("a");allAnchors.off(System.Enum.toString(System.String,"click"));allAnchors.click(Bridge.fn.bind(this,$asm.$.Bridge.Navigation.BridgeNavigator.f1))},Navigate:function(pageId,parameters){var $t,page,redirectKey,body;if(parameters===void 0&&(parameters=null),page=this.Configuration.Bridge$Navigation$INavigatorConfigurator$GetPageDescriptorByKey(pageId),page==null)throw new System.Exception(System.String.format("Page not found with ID {0}",[pageId]));if(redirectKey=Bridge.staticEquals($t=page.Bridge$Navigation$IPageDescriptor$RedirectRules,null)?null:$t(),!System.String.isNullOrEmpty(redirectKey)){this.Navigate(redirectKey,parameters);return}if(body=this.Configuration.Bridge$Navigation$INavigatorConfigurator$Body,body==null)throw new System.Exception("Cannot find navigation body element.");this.LastNavigateController!=null&&this.LastNavigateController.Bridge$Navigation$IAmLoadable$OnLeave();this.Configuration.Bridge$Navigation$INavigatorConfigurator$Body.load(page.Bridge$Navigation$IPageDescriptor$HtmlLocation(),null,Bridge.fn.bind(this,function(o,s,a){var $step=0,$task1,$taskResult1,o,s,a,$jumpFromFinally,scripts,scriptsTask,$t1,enableAnchors,$t2,controller,$asyncBody=Bridge.fn.bind(this,function(){for(;;){$step=System.Array.min([0,1,2,3],$step);switch($step){case 0:if(!Bridge.staticEquals(page.Bridge$Navigation$IPageDescriptor$DependenciesScripts,null)){$step=1;continue}$step=3;continue;case 1:scripts=System.Linq.Enumerable.from(page.Bridge$Navigation$IPageDescriptor$DependenciesScripts()).toList(System.String);page.Bridge$Navigation$IPageDescriptor$SequentialDependenciesScriptLoad&&Bridge.Navigation.Utility.SequentialScriptLoad(scripts);scriptsTask=System.Linq.Enumerable.from(scripts).select($asm.$.Bridge.Navigation.BridgeNavigator.f2);$task1=System.Threading.Tasks.Task.whenAll(scriptsTask);$step=2;$task1.continueWith($asyncBody,!0);return;case 2:$taskResult1=$task1.getAwaitedResult();$step=3;continue;case 3:Bridge.staticEquals($t1=page.Bridge$Navigation$IPageDescriptor$PreparePage,null)?null:$t1();this.Configuration.Bridge$Navigation$INavigatorConfigurator$DisableAutoSpafAnchorsOnNavigate||(enableAnchors=Bridge.staticEquals($t2=page.Bridge$Navigation$IPageDescriptor$AutoEnableSpafAnchors,null)?null:$t2(),System.Nullable.hasValue(enableAnchors)&&System.Nullable.getValue(enableAnchors)&&this.EnableSpafAnchors());Bridge.staticEquals(page.Bridge$Navigation$IPageDescriptor$PageController,null)||(controller=page.Bridge$Navigation$IPageDescriptor$PageController(),controller.Bridge$Navigation$IAmLoadable$OnLoad(parameters),Bridge.Navigation.BridgeNavigator._actualController=controller,Bridge.staticEquals(this.OnNavigated,null)?null:this.OnNavigated(this,controller));return;default:return}}},arguments);$asyncBody()}))},InitNavigation:function(){this.EnableSpafAnchors();this.Navigate(this.Configuration.Bridge$Navigation$INavigatorConfigurator$HomeId)}}});Bridge.ns("Bridge.Navigation.BridgeNavigator",$asm.$);Bridge.apply($asm.$.Bridge.Navigation.BridgeNavigator,{f1:function(ev){var clickedElement=ev.target,href,isMyHref,pageId;(Bridge.referenceEquals(Bridge.getType(clickedElement),HTMLAnchorElement)||(clickedElement=$(ev.target).parents("a").get(0)),href=clickedElement.getAttribute("href"),System.String.isNullOrEmpty(href))||(isMyHref=System.String.startsWith(href,"spaf:"),isMyHref&&(ev.preventDefault(),pageId=System.String.replaceAll(href,"spaf:",""),this.Navigate(pageId)))},f2:function(url){return System.Threading.Tasks.Task.fromPromise($.getScript(url))}});Bridge.define("Bridge.Navigation.BridgeNavigatorConfigBase",{inherits:[Bridge.Navigation.INavigatorConfigurator],fields:{_routes:null},alias:["GetPageDescriptorByKey","Bridge$Navigation$INavigatorConfigurator$GetPageDescriptorByKey"],ctors:{ctor:function(){this.$initialize();this._routes=this.CreateRoutes()}},methods:{GetPageDescriptorByKey:function(key){return System.Linq.Enumerable.from(this._routes).singleOrDefault(function(s){return System.String.equals(s.Bridge$Navigation$IPageDescriptor$Key,key,1)},null)}}});Bridge.define("Bridge.Navigation.ComplexObjectNavigationHistory",{inherits:[Bridge.Navigation.IBrowserHistoryManager],alias:["PushState","Bridge$Navigation$IBrowserHistoryManager$PushState","ParseUrl","Bridge$Navigation$IBrowserHistoryManager$ParseUrl"],methods:{PushState:function(pageId,parameters){parameters===void 0&&(parameters=null);var baseUrl=Bridge.Navigation.NavigationUtility.BuildBaseUrl(pageId);window.history.pushState(null,"",parameters!=null?System.String.format("{0}={1}",baseUrl,Bridge.global.btoa(JSON.stringify(parameters))):baseUrl)},ParseUrl:function(){var res=new Bridge.Navigation.Model.UrlDescriptor,hash=window.location.hash,equalIndex,doublePointsIndx,parameters,decoded,deserialized;return(hash=System.String.replaceAll(hash,"#",""),System.String.isNullOrEmpty(hash))?res:(equalIndex=System.String.indexOf(hash,String.fromCharCode(61)),equalIndex===-1)?(res.PageId=hash,res):(res.PageId=hash.substr(0,equalIndex),doublePointsIndx=equalIndex+1|0,parameters=hash.substr(doublePointsIndx,hash.length-doublePointsIndx|0),System.String.isNullOrEmpty(parameters))?res:(decoded=Bridge.global.atob(parameters),deserialized=Bridge.merge(Bridge.createInstance(System.Collections.Generic.Dictionary$2(System.String,System.Object)),JSON.parse(decoded)),res.Parameters=deserialized,res)}}});Bridge.define("Bridge.Navigation.PageDescriptor",{inherits:[Bridge.Navigation.IPageDescriptor],props:{Key:null,HtmlLocation:null,PageController:null,CanBeDirectLoad:null,PreparePage:null,SequentialDependenciesScriptLoad:!1,RedirectRules:null,AutoEnableSpafAnchors:null,DependenciesScripts:null},alias:["Key","Bridge$Navigation$IPageDescriptor$Key","HtmlLocation","Bridge$Navigation$IPageDescriptor$HtmlLocation","PageController","Bridge$Navigation$IPageDescriptor$PageController","CanBeDirectLoad","Bridge$Navigation$IPageDescriptor$CanBeDirectLoad","PreparePage","Bridge$Navigation$IPageDescriptor$PreparePage","SequentialDependenciesScriptLoad","Bridge$Navigation$IPageDescriptor$SequentialDependenciesScriptLoad","RedirectRules","Bridge$Navigation$IPageDescriptor$RedirectRules","AutoEnableSpafAnchors","Bridge$Navigation$IPageDescriptor$AutoEnableSpafAnchors","DependenciesScripts","Bridge$Navigation$IPageDescriptor$DependenciesScripts"],ctors:{ctor:function(){this.$initialize();this.AutoEnableSpafAnchors=$asm.$.Bridge.Navigation.PageDescriptor.f1}}});Bridge.ns("Bridge.Navigation.PageDescriptor",$asm.$);Bridge.apply($asm.$.Bridge.Navigation.PageDescriptor,{f1:function(){return!0}});Bridge.define("Bridge.Navigation.QueryParameterNavigationHistory",{inherits:[Bridge.Navigation.IBrowserHistoryManager],alias:["PushState","Bridge$Navigation$IBrowserHistoryManager$PushState","ParseUrl","Bridge$Navigation$IBrowserHistoryManager$ParseUrl"],methods:{PushState:function(pageId,parameters){parameters===void 0&&(parameters=null);var baseUrl=Bridge.Navigation.NavigationUtility.BuildBaseUrl(pageId);window.history.pushState(null,"",parameters!=null?System.String.format("{0}{1}",baseUrl,this.BuildQueryParameter(parameters)):baseUrl)},ParseUrl:function(){var res=new Bridge.Navigation.Model.UrlDescriptor,hash,equalIndex,doublePointsIndx,parameters,splittedByDoubleAnd;return(res.Parameters=new(System.Collections.Generic.Dictionary$2(System.String,System.Object)),hash=window.location.hash,hash=System.String.replaceAll(hash,"#",""),System.String.isNullOrEmpty(hash))?res:(equalIndex=System.String.indexOf(hash,String.fromCharCode(63)),equalIndex===-1)?(res.PageId=hash,res):(res.PageId=hash.substr(0,equalIndex),doublePointsIndx=equalIndex+1|0,parameters=hash.substr(doublePointsIndx,hash.length-doublePointsIndx|0),System.String.isNullOrEmpty(parameters))?res:(splittedByDoubleAnd=System.Linq.Enumerable.from(parameters.split("&")).toList(System.String),splittedByDoubleAnd.ForEach(function(f){var splitted=f.split("=");res.Parameters.add(splitted[System.Array.index(0,splitted)],decodeURIComponent(splitted[System.Array.index(1,splitted)]))}),res)},BuildQueryParameter:function(parameters){var $t,strBuilder,keyValuePair;if(parameters==null||!System.Linq.Enumerable.from(parameters).any())return"";strBuilder=new System.Text.StringBuilder("?");$t=Bridge.getEnumerator(parameters);try{while($t.moveNext())keyValuePair=$t.Current,strBuilder.append(encodeURIComponent(keyValuePair.key)),strBuilder.append("="),strBuilder.append(encodeURIComponent(Bridge.toString(keyValuePair.value))),strBuilder.append("&")}finally{Bridge.is($t,System.IDisposable)&&$t.System$IDisposable$Dispose()}return System.String.trimEnd(strBuilder.toString(),[38])}}});Bridge.define("Bridge.Navigation.BridgeNavigatorWithRouting",{inherits:[Bridge.Navigation.BridgeNavigator],fields:{_browserHistoryManager:null},alias:["Navigate","Bridge$Navigation$INavigator$Navigate","InitNavigation","Bridge$Navigation$INavigator$InitNavigation"],ctors:{ctor:function(configuration,browserHistoryManager){this.$initialize();Bridge.Navigation.BridgeNavigator.ctor.call(this,configuration);this._browserHistoryManager=browserHistoryManager;window.onpopstate=Bridge.fn.combine(window.onpopstate,Bridge.fn.bind(this,function(e){var urlInfo=this._browserHistoryManager.Bridge$Navigation$IBrowserHistoryManager$ParseUrl();this.NavigateWithoutPushState(System.String.isNullOrEmpty(urlInfo.PageId)?configuration.Bridge$Navigation$INavigatorConfigurator$HomeId:urlInfo.PageId,urlInfo.Parameters)}))}},methods:{NavigateWithoutPushState:function(pageId,parameters){parameters===void 0&&(parameters=null);Bridge.Navigation.BridgeNavigator.prototype.Navigate.call(this,pageId,parameters)},Navigate:function(pageId,parameters){parameters===void 0&&(parameters=null);this._browserHistoryManager.Bridge$Navigation$IBrowserHistoryManager$PushState(pageId,parameters);Bridge.Navigation.BridgeNavigator.prototype.Navigate.call(this,pageId,parameters)},InitNavigation:function(){var parsed=this._browserHistoryManager.Bridge$Navigation$IBrowserHistoryManager$ParseUrl(),page;if(System.String.isNullOrEmpty(parsed.PageId))Bridge.Navigation.BridgeNavigator.prototype.InitNavigation.call(this);else{if(this.EnableSpafAnchors(),page=this.Configuration.Bridge$Navigation$INavigatorConfigurator$GetPageDescriptorByKey(parsed.PageId),page==null)throw new System.Exception(System.String.format("Page not found with ID {0}",[parsed.PageId]));Bridge.staticEquals(page.Bridge$Navigation$IPageDescriptor$CanBeDirectLoad,null)||page.Bridge$Navigation$IPageDescriptor$CanBeDirectLoad()?this.Navigate(parsed.PageId,parsed.Parameters):(this._browserHistoryManager.Bridge$Navigation$IBrowserHistoryManager$PushState(this.Configuration.Bridge$Navigation$INavigatorConfigurator$HomeId,void 0),this.NavigateWithoutPushState(this.Configuration.Bridge$Navigation$INavigatorConfigurator$HomeId))}}}})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJCcmlkZ2UuTmF2aWdhdGlvbi5taW4uanMiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiIiwKICAic291cmNlc0NvbnRlbnQiOiBbXQp9Cg==
